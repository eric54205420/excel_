public lastrow as integer
public lastcol as integer

Sub get_Last_Row_And_Col()
    
    lastrow = Cells(Rows.Count, ActiveCell.Column).End(xlUp).Row
    lastcol = Cells(ActiveCell.Row, Columns.Count).End(xlToLeft).Column
    MsgBox lastrow & " " & lastcol
End Sub
 

Sub auto_Fill_row_dir()
    Dim rng_row_direction As Range
    'Dim rng_col_direction As Range
   
   ' 參考左邊欄 得到應填充列數
    lastrow = Cells(Rows.Count, ActiveCell.Column - 1).End(xlUp).Row
    'lastcol = Cells(ActiveCell.Row - 1, Columns.Count).End(xlToLeft).Column
    
    ' 選取當前儲存格至該欄欄尾
     Set rng_row_direction = Range(ActiveCell, Cells(lastrow, ActiveCell.Column))
     'Set rng_col_direction = Range(Cells(ActiveCell.Row, lastcol), ActiveCell)

    ActiveCell.AutoFill Destination:=rng_row_direction
    ActiveCell.AutoFill Destination:=rng_col_direction

End Sub

Sub grab_data_except_title()

Dim curr_rows As Integer
Dim curr_cols As Integer
Dim current As Range

Set current = activecell.CurrentRegion

curr_rows = current.Rows.Count
curr_cols = current.Columns.Count


current.Resize(curr_rows - 1, curr_cols).Offset(1, 0).Select

End Sub


Sub color_change()
    
    Dim color_index As Integer
    
    color_index = 10
    
    Range("A1").Interior.ColorIndex = color_index
    'Range("A1").Interior.Color = QBColor(color_index)       ' 0 ~ 15
    'Range("A1").Interior.Color = RGB(color_index, color_index, color_index) ' 0 ~ 255
End Sub

Sub content_test()

    On Error Resume Next

    Dim Empty_or_not As Boolean
    Dim Number_or_not As Boolean
    Dim String_or_not As Boolean
    Dim Date_or_not As Boolean
    Dim Error_or_not As Boolean
    
    Empty_or_not = VBA.IsEmpty([ a1 ].Value)
    Number_or_not = VBA.IsNumeric([ a1 ].Value) And [ a1] <> ""
    String_or_not = VBA.TypeName([ a1 ].Value) = "String"
    Date_or_not = VBA.IsDate([a1].Value)
    Error_or_not = VBA.IsError([a1].Value)

    
    Debug.Print _
            "Is empty: " & Empty_or_not & Chr(10) & _
            "Is Number: " & Number_or_not & Chr(10) & _
            "Is String: " & String_or_not & Chr(10) & _
            "Is Date: " & Date_or_not & Chr(10) & _
            "Is Error: " & Error_or_not & Chr(10)
            
End Sub

Sub find_contents()

	' 於某欄中查找某值 第一 / 最後一 次出現位置
    
    Dim first_occur As Integer
    Dim last_occur As Integer
    Dim icount As Integer

    ' find [b1] in column A
    icount = Application.WorksheetFunction.CountIf(Sheets("test").[a:a], [b1])

    If icount > 0 Then
    
        first_occur = Sheets("test").[a:a].Find([b1], lookat:=xlWhole).Row
        last_occur = Sheets("test").[a:a].Find([b1], searchdirection:=xlPrevious).Row
        
        MsgBox "First occur: " & first_occur & " row" & Chr(10) & _
                      "Last occur: " & last_occur & " row"
    End If

End Sub

Sub grab_and_store_data_to_array()

    Dim arr
    Dim iter
    Dim row_bound As Integer
    Dim col_bound As Integer
    Dim grab_rng As Range

    ' constant array
    ' arr = Array("hello", "excel", "arr", "test")
    
'  For Each iter In arr
'  Debug.Print iter
'  Next iter
'  Stop

' grab data from range
' arr = Range("A1:C4")
    
' For Each iter In arr
' Debug.Print iter
' Next iter

' Stop
    
      Set grab_rng = Range("A1:C4")
      row_bound = grab_rng.Rows.Count
      col_bound = grab_rng.Columns.Count

      ReDim arr(1 To row_bound, 1 To col_bound)
      redim iter ( 1 To row_bound )
      arr = grab_rng
      iter = arr(1)
            
      ' row and col lower / upper bound
      ' LBound ( grab_rng , 1 ) UBound ( grab_rng , 1 ) 
      ' LBound ( grab_rng , 2 ) UBound ( grab_rng, 2 )

      Stop

End Sub


Sub slice_array()

	Dim arr
	Dim arr2

	' slice array way I
	arr2 = Range("a1").CurrentRegion
	arr = Range("A1").CurrentRegion.Rows(1)

	' slice array way II
	arr = Application.Index(arr2, 2, 0)
	Stop

End Sub

Sub find_Error_Range ()

Dim Rng As Object
Dim i As Integer

For i = 1 To Sheets.Count
    For Each Rng In Sheets(i).Range(Sheets(i).Cells(1, 1), _ 
    				    Sheets(i).Cells(1, 1).SpecialCells(xlLastCell))
        
	If IsError(Rng.Value) Then
            errval = Rng.Value
            Select Case errval
                
	Case CVErr(xlErrDiv0)
                    Debug.Print Sheets(i).Name & " - " & Rng.Address & ": " & "#DIV/0!"
                
	Case CVErr(xlErrNA)
                    Debug.Print Sheets(i).Name & " - " & Rng.Address & ": " & "#N/A"
                
	Case CVErr(xlErrName)
                    Debug.Print Sheets(i).Name & " - " & Rng.Address & ": " & "#NAME?"
                
	Case CVErr(xlErrNull)
                    Debug.Print Sheets(i).Name & " - " & Rng.Address & ": " & "#NULL!"
                
	Case CVErr(xlErrNum)
                    Debug.Print Sheets(i).Name & " - " & Rng.Address & ": " & "#NUM!"
                
	Case CVErr(xlErrRef)
                    Debug.Print Sheets(i).Name & " - " & Rng.Address & ": " & "#REF!"
                
	Case CVErr(xlErrValue)
                    Debug.Print Sheets(i).Name & " - " & Rng.Address & ": " & "#VALUE!"
            
	End Select
        
	End If
    Next

Next i

End Sub
